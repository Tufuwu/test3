name: CI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest]
        python-version: [3.9]
    steps:
    - uses: actions/checkout@v3

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install Miniconda
      shell: bash
      run: |
        if [[ "${{ matrix.os }}" == "ubuntu-latest" ]]; then
          wget -q https://repo.anaconda.com/miniconda/Miniconda3-latest-Linux-x86_64.sh -O miniconda.sh;
        else
          wget -q https://repo.anaconda.com/miniconda/Miniconda3-latest-MacOSX-x86_64.sh -O miniconda.sh;
        fi
        chmod +x miniconda.sh
        ./miniconda.sh -b -p $HOME/miniconda
        echo "$HOME/miniconda/bin" >> $GITHUB_PATH
        conda update --yes --quiet conda

    - name: Create and activate conda environment
      shell: bash
      run: |
        conda create -n testenv --yes pip python=${{ matrix.python-version }}
        source activate testenv
        conda install --yes scipy numpy matplotlib
        if [[ "${{ matrix.os }}" == "macos-latest" ]]; then
          conda install --yes mpi4py openmpi
        else
          pip install mpi4py
        fi
        pip install flake8 pytest pytest-cov
        pip install mne psutil joblib
        pip install NEURON neuron

    - name: Install package
      shell: bash
      run: |
        cd $GITHUB_WORKSPACE
        python setup.py install

    - name: Lint with flake8
      run: flake8 --count hnn_core

    - name: Test with pytest
      run: python -m pytest . --cov=hnn_core hnn_core/tests/ --cov-report=xml

    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.xml