name: Python package

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-18.04
    strategy:
      matrix:
        python-version: ['3.5', '3.6', '3.7', 'nightly']
        include:
          - python-version: 'nightly'
            allow_failures: true

    steps:
    - uses: actions/checkout@v2

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}

    - name: Cache pip
      uses: actions/cache@v2
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-

    - name: Install dependencies
      run: |
        pip install pylint pytest pytest-cov
        pylint --generate-rcfile > ~/.pylintrc
        sed -i "s/min-similarity-lines=.*/min-similarity-lines=50/g" ~/.pylintrc
        git describe --tags --long --dirty || sed -i "s/setup_requires = .*/version = '0.0.0',/g" $GITHUB_WORKSPACE/setup.py
        pip install -e .

    - name: Lint with pylint
      run: |
        pylint content_hash/*
        pylint example.py

    - name: Test with pytest
      run: |
        pytest --cov=content_hash

    - name: Run after script for Python 3.7
      if: matrix.python-version == '3.7'
      run: |
        pip install scrutinizer-ocular
        ocular

  deploy:
    runs-on: ubuntu-18.04
    needs: build
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/')
    steps:
    - uses: actions/checkout@v2

    - name: Set up Python 3.7
      uses: actions/setup-python@v2
      with:
        python-version: '3.7'

    - name: Install dependencies
      run: pip install -U setuptools wheel twine

    - name: Build and publish
      env:
        TWINE_USERNAME: ${{ secrets.PYPI_USER }}
        TWINE_PASSWORD: ${{ secrets.PYPI_PASSWORD }}
      run: |
        python setup.py sdist bdist_wheel
        twine upload --skip-existing dist/*
