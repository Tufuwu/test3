name: CI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-22.04
    strategy:
      fail-fast: false
      matrix:
        python-version: ['3.5', '3.6', '3.7', '3.8']
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: Cache pip
      uses: actions/cache@v4
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-
    - name: Install dependencies
      run: |
        sudo sh -c "echo 'deb http://packages.ros.org/ros/ubuntu xenial main' > /etc/apt/sources.list.d/ros-latest.list"
        sudo apt-key adv --keyserver hkp://ha.pool.sks-keyservers.net:80 --recv-key C1CF6E31E6BADE8868B172B4F42ED6FBAB17C654
        sudo apt-get update
        cat install.txt | xargs sudo apt-get install -y
        cat ros-deps.txt | xargs sudo apt-get install -y
        pip install -r requirements.txt
        pip3 install -r requirements.txt
        pip3 install mypy
        sudo rosdep init
        rosdep update
        sudo apt-get install -y nodejs-dev npm
        sudo npm install -g n && sudo n stable
        sudo npm install -g markdownlint-cli@0.21.0
    - name: Run tests
      run: |
        pip install tox
        tox -e $(echo py${{ matrix.python-version }} | tr -d . | sed -e 's/pypypy/pypy/' | sed -e 's/-dev//')
        cp tests/plugins/tool/clang-format_tool_plugin/different-clang-format.cfg ~/.clang-format
        cp statick_tool/rsc/.markdownlintrc ~/.markdownlintrc

  self_check:
    runs-on: ubuntu-22.04
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python 3.8
      uses: actions/setup-python@v2
      with:
        python-version: '3.8'
    - name: Install dependencies
      run: |
        pip install -r requirements.txt
        pip3 install mypy
    - name: Run self check
      run: |
        ./statick . --profile self_check.yaml
        statick . --user-paths statick_tool --profile documentation.yaml
        mypy --ignore-missing-imports statick_tool/

  documentation:
    runs-on: ubuntu-22.04
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python 3.8
      uses: actions/setup-python@v2
      with:
        python-version: '3.8'
    - name: Install dependencies
      run: |
        pip install -r requirements.txt
        pip install -r requirements-docs.txt
    - name: Build and deploy documentation
      run: |
        travis-sphinx build
        travis-sphinx deploy

  deploy:
    runs-on: ubuntu-22.04
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/')
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python 3.8
      uses: actions/setup-python@v2
      with:
        python-version: '3.8'
    - name: Publish to PyPI
      env:
        TWINE_USERNAME: tdenewiler
        TWINE_PASSWORD: ${{ secrets.PYPI_PASSWORD }}
      run: |
        pip install twine
        python setup.py sdist bdist_wheel
        twine upload --skip-existing dist/*