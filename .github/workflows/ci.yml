name: Python CI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  release:
    types: [created]

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [2.7, 3.4, 3.5, 3.6, 3.7, 3.8]
        aio-available: [false, true]
        coveragerc: [".coveragerc-py2", ".coveragerc-py34", ".coveragerc", ".coveragerc", ".coveragerc", ".coveragerc"]
      fail-fast: false

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies
        run: |
          pip install -U pip setuptools wheel
          pip install -U pytest pytest-cov coveralls
          if [ '${{ matrix.aio-available }}' = 'true' ]; then pip install -U pytest-asyncio; fi
          pip install -e .

      - name: Run tests
        run: |
          py.test --cov-config ${{ matrix.coveragerc }} --cov=pydispatch

      - name: Upload coverage to Coveralls

        run: coveralls --rcfile="${{ matrix.coveragerc }}"

  deploy:
    runs-on: ubuntu-latest
    needs: build
    if: github.event_name == 'release' && github.event.action == 'created' 
    steps:
      - name: Deploy to PyPI
        run: |
          python setup.py sdist bdist_wheel
          twine upload dist/* -u __token__ -p ${{ secrets.PYPI_TOKEN }}