name: CI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
        include:
          - os: ubuntu-latest
            BUILD_TARGET: 3.8
            RDKIT: 2019.09
            MINICONDA_VERSION: 4.8.3
          - os: ubuntu-latest
            BUILD_TARGET: 3.8
            RDKIT: 2019.09
            MINICONDA_VERSION: latest
          - os: macos-latest
            BUILD_TARGET: 3.8
            RDKIT: 2019.09
            MINICONDA_VERSION: 4.8.3
          - os: macos-latest
            BUILD_TARGET: 3.8
            RDKIT: 2019.09
            MINICONDA_VERSION: latest

    runs-on: ${{ matrix.os }}

    steps:
    - name: Set up Python ${{ matrix.BUILD_TARGET }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.BUILD_TARGET }}

    - name: Install Miniconda
      shell: bash
      run: |
        if [ "${{ matrix.os }}" = "ubuntu-latest" ]; then OS=Linux-x86_64; else OS=MacOSX-x86_64; fi
        if [ "${{ matrix.MINICONDA_VERSION }}" = "latest" ]; then 
          wget -O miniconda.sh https://repo.continuum.io/miniconda/Miniconda${{ matrix.BUILD_TARGET:0:1 }}-${{ matrix.MINICONDA_VERSION }}-$OS.sh; 
        else 
          wget -O miniconda.sh https://repo.continuum.io/miniconda/Miniconda${{ matrix.BUILD_TARGET:0:1 }}-py${{ matrix.BUILD_TARGET//. }}_${{ matrix.MINICONDA_VERSION }}-$OS.sh;
        fi  
        bash miniconda.sh -b -p $HOME/miniconda
        echo "$HOME/miniconda/bin" >> $GITHUB_PATH
        conda config --set always_yes yes --set changeps1 no
        conda config --add channels conda-forge
        conda update -q conda
        conda create -q -n test-environment python=${{ matrix.BUILD_TARGET }} rdkit=${{ matrix.RDKIT }} nose
        source activate test-environment

    - name: Install dependencies
      run: python setup.py install

    - name: Run tests
      run: nosetests --with-doctest