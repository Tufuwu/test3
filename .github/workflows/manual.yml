name: CI
on:
  push:


jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python 3.8
        uses: actions/setup-python@v2
        with:
          python-version: 3.8
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install --upgrade pip pyinstaller wheel
          pip install -r requirements.txt .
      - name: Run script
        run: |
          cd pyinstaller && chmod +x ./bundle.sh && ./bundle.sh

  build-macos:
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python 3.8
        uses: actions/setup-python@v2
        with:
          python-version: 3.8
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install --upgrade pip pyinstaller wheel
          pip install -r requirements.txt .
      - name: Run script
        run: |
          cd pyinstaller && chmod +x ./bundle.sh && ./bundle.sh

  build-windows:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v2
      - name: Setup Python 3.8
        uses: actions/setup-python@v2
        with:
          python-version: 3.8
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install --upgrade pip pyinstaller wheel
          pip install -r requirements.txt .
      - name: Run script
        run: |
          cd pyinstaller && chmod +x ./bundle.sh && ./bundle.sh

  build-linux-arm64:
    runs-on: [ubuntu-latest, arm64]
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python 3.8
        uses: actions/setup-python@v2
        with:
          python-version: 3.8
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install --upgrade pip pyinstaller wheel
          pip install -r requirements.txt .
      - name: Run script
        run: |
          cd pyinstaller && chmod +x ./bundle.sh && ./bundle.sh

  deploy:
    runs-on: ubuntu-latest
    needs: [build, build-macos, build-windows, build-linux-arm64]
    steps:
      - name: Deploy to GitHub Releases
        uses: actions/deploy-release@v1
        with:
          token: ${{ secrets.RELEASE_TOKEN }}
          file_glob: true
          files: deploy/*
          draft: true
          on:
            tags: true
          name: ${{ github.ref_name }} (DRAFT)