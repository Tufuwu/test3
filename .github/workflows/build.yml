name: Python package

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        python-version: [ 3.8]

    steps:
    - uses: actions/checkout@v2

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install dependencies
      run: |
        pip install pep8 flake8 black==19.10b0 mypy
        pip install -r requirements.txt
        pip install pytest
        pip install .

    - name: Lint with flake8
      run: |
        flake8 --show-source --ignore=F811,W293,W391,W292,W291,E252,W503,E203 --max-line-length=79 --exclude='conf.py,__init__.py'

    - name: Check code style with black
      run: black . --check -l 79

    - name: Type check with mypy
      run: mypy efficient_apriori/*.py --ignore-missing-imports --show-error-context

    - name: Test with pytest
      run: pytest --doctest-modules -v efficient_apriori

  deploy:
    if: github.ref == 'refs/heads/master' && github.event_name == 'push'
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: 3.8

    - name: Install dependencies
      run: |
        pip install pep8 flake8 black==19.10b0 mypy
        pip install -r requirements.txt
        pip install .

    - name: Build and publish
      env:
        TWINE_USERNAME: tommyod
        TWINE_PASSWORD: ${{ secrets.TWINE }}
      run: |
        pip install twine
        python setup.py sdist bdist_wheel
        python -m twine upload dist/* --skip-existing