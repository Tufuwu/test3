name: CI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: [3.8]
        job-type: [UNITTEST, DOCS, LINT]
    env:
      FULL_DEPS: ${{ matrix.job-type != 'LINT' }}
    steps:
    - uses: actions/checkout@v2

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install Miniconda
      uses: conda-incubator/setup-miniconda@v2
      with:
        auto-update-conda: true

    - name: Create conda environment
      run: conda create -q -n mizani-test python=${{ matrix.python-version }}

    - name: Activate conda environment
      run: echo "conda activate mizani-test" >> $GITHUB_ENV

    - name: Install dependencies
      run: |
        if [ "${{ env.FULL_DEPS }}" = "true" ]; then
          conda install scipy pandas matplotlib
          pip install palettable
        fi
        if [ "${{ matrix.job-type }}" == "UNITTEST" ]; then
          conda install pytest-cov
          pip install coveralls
        elif [ "${{ matrix.job-type }}" == "DOCS" ]; then
          pip install -r requirements/doc.txt
        elif [ "${{ matrix.job-type }}" == "LINT" ]; then
          pip install flake8
        fi
    - name: List installed packages
      run: |
        conda list
        pip list

    - name: Run script
      run: |
        if [ "${{ matrix.job-type }}" == "UNITTEST" ]; then
          coverage erase
          make test
        elif [ "${{ matrix.job-type }}" == "DOCS" ]; then
          pushd doc
          SPHINXOPTS=-W
          make html && popd
        elif [ "${{ matrix.job-type }}" == "LINT" ]; then
          make lint
        fi

    - name: Upload coverage to Coveralls
      if: matrix.job-type == 'UNITTEST'
      run: coveralls --rcfile=.coveragerc