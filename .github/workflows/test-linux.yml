name: Python package

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.5", "3.6", "3.7", "3.8", "3.9", "3.9-dev"]
        include:
          - python-version: "3.5"
            geos-version: "3.5.2"
            numpy-version: "1.10.4"
          - python-version: "3.6"
            geos-version: "3.6.4"
            numpy-version: "1.13.3"
          - python-version: "3.7"
            geos-version: "3.7.3"
            numpy-version: "1.15.4"
          - python-version: "3.8"
            geos-version: "3.8.1"
            numpy-version: "1.17.5"
          - python-version: "3.9"
            geos-version: "3.8.1"
            numpy-version: "1.19.4"
          - python-version: "3.9-dev"
            geos-version: "master"
            numpy-version: ""
    env:
      GEOS_VERSION: ${{ matrix.geos-version }}
      GEOS_INSTALL: ${{ github.workspace }}/geosinstall/geos-${{ matrix.geos-version }}

    steps:
    - uses: actions/checkout@v2

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}

    - name: Cache GEOS and pip packages
      uses: actions/cache@v4
      with:
        key: ${{ runner.os }}-geos-${{ matrix.geos-version }}
        path: |
          ~/.cache/pip
          ${{ github.workspace }}/geosinstall


    - name: Install GEOS
      run: |
        chmod +x ./ci/install_geos.sh
        ./ci/install_geos.sh
        cd ${{ github.workspace }}

    - name: Install dependencies
      run: |
        pip install --disable-pip-version-check --upgrade pip
        pip install --upgrade wheel
        if [ "${{ matrix.geos-version }}" = "master" ]; then
          pip install --upgrade --pre 'Cython==0.29.33' numpy pytest;
        else
          pip install --upgrade 'Cython==0.29.33' "numpy==${{ matrix.numpy-version }}" pytest;
        fi

    - name: Set environment variables
      shell: bash
      run: |
        echo "LD_LIBRARY_PATH=$GEOS_INSTALL/lib" >> $GITHUB_ENV
        echo $GEOS_INSTALL/bin >> $GITHUB_PATH

    - name: Build and install
      run: |
        python setup.py build_ext --inplace
        pip install --no-deps -e .

    - name: Test with pytest
      run: |
        pytest --doctest-modules