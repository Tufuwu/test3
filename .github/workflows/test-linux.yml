name: Python package

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        include:
          # 2015
          - python: 3.5
            geos-version: 3.5.2
            numpy: 1.10.4
          # 2017
          - python: 3.6
            geos-version: 3.6.4
            numpy: 1.13.3
          # 2018
          - python: 3.7
            geos-version: 3.7.3
            numpy: 1.15.4
          # 2019
          - python: 3.8
            geos-version: 3.8.1
            numpy: 1.17.5
          # 2020
          - python: 3.9
            geos-version: 3.8.1
            numpy: 1.19.4
          # dev
          - python: 3.9
            geos-version: master


    env:
      GEOS_VERSION: ${{ matrix.geos-version }}
      GEOS_INSTALL: ${{ github.workspace }}/geosinstall/geos-${{ matrix.geos-version }}

    steps:
    - uses: actions/checkout@v2

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}

    - name: Cache pip
      uses: actions/cache@v4
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-

    - name: Cache GEOS and pip packages
      uses: actions/cache@v4
      with:
        key: ${{ runner.os }}-geos-${{ matrix.geos-version }}
        path: |
          ~/.cache/pip
          ${{ github.workspace }}/geosinstall


    - name: Install GEOS
      run: |
        chmod +x ./ci/install_geos.sh
        ./ci/install_geos.sh

    - name: Install python dependencies
      shell: bash
      run: |
        pip install --disable-pip-version-check --upgrade pip
        pip install --upgrade wheel
        if [ "$GEOS_VERSION" = "master" ]; then
          pip install --upgrade --pre Cython==0.29.33 numpy pytest;
        else
          pip install --upgrade Cython==0.29.33 numpy==${{ matrix.numpy }} pytest;
        fi
        pip list

    - name: Set environment variables
      run: |
        export LD_LIBRARY_PATH=${{ github.workspace }}/geosinstall/geos-${{ matrix.geos-version }}/lib
        export PATH=${{ github.workspace }}/geosinstall/geos-${{ matrix.geos-version }}/bin:$PATH

    - name: Build and install
      run: |
        python setup.py build_ext --inplace
        pip install --no-deps -e .

    - name: Test with pytest
      run: |
        pytest --doctest-modules