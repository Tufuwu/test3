name: CI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  test:
    runs-on: ubuntu-22.04
    strategy:
      fail-fast: false
      matrix:
        python-version: [3.5, 3.6, 3.7, 3.8, 3.9-dev]
        django-version: [2.2.*, 3.0.*, 3.1.*, master]
        database:
          - { type: postgres, url: postgres://postgres@/django_guardian, service: postgresql, version: "10" }
          - { type: mysql, url: mysql://root:@localhost/django_guardian, service: mariadb, version: "10.3" }
          - { type: sqlite, url: sqlite:// }
        exclude:
          - python-version: 3.5
            django-version: 3.0.*
          - python-version: 3.5
            django-version: 3.1.*
          - python-version: 3.5
            django-version: master
          - python-version: 3.9-dev
            django-version: 2.2.*
          - python-version: 3.9-dev
            django-version: 3.0.*
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install --upgrade pip wheel setuptools
    - name: Install dependencies
      run: |
        PACKAGES=('mock' 'pytest' 'pytest-django' 'pytest-cov' 'django-environ' 'setuptools_scm' 'pyupgrade' 'psycopg2-binary' 'mysqlclient')
        if [[ "${{ matrix.django }}" == 'main' ]]; then
            PACKAGES+=('https://github.com/django/django/archive/main.tar.gz');
        else
            PACKAGES+=("Django~=${{ matrix.django }}");
        fi;

        PGPASSWORD="postgres" psql -c 'create database django_guardian;' -h localhost -U postgres;
        PGPASSWORD="postgres" psql -c 'create database test_django_guardian;' -h localhost -U postgres;

        mysql --host=127.0.0.1 --user=root --password=mariadb -e 'CREATE DATABASE django_guardian;';
        mysql --host=127.0.0.1 --user=root --password=mariadb -e 'CREATE DATABASE test_django_guardian;';

        python -m pip install --upgrade --upgrade-strategy=only-if-needed ${PACKAGES[*]};
    - name: Ensure no version conflicts exist
      run: pip check
    - name: Lint modern PY3 syntax
      run: find . -name '*.py' | xargs pyupgrade --py3-only

    - name: Code tests (with PostgreSQL)
      run: |
        export DATABASE_URL=postgres://postgres:postgres@localhost/django_guardian
        python ./setup.py --version
        py.test --cov=guardian

    - name: Code tests (with MariaDB)
      run: |
        export DATABASE_URL=mysql://root:mariadb@127.0.0.1:3306/django_guardian
        python ./setup.py --version
        py.test --cov=guardian

    - name: Code tests (with SQLite)
      run: |
        export DATABASE_URL=sqlite://
        python ./setup.py --version
        py.test --cov=guardian
    services:
      postgresql:

        image: postgres:10
        env:
          POSTGRES_USER: postgres

          POSTGRES_PASSWORD: postgres
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
      mariadb:

        image: mariadb:10.3
        env:
          MYSQL_ROOT_PASSWORD: mariadb
          MYSQL_ALLOW_EMPTY_PASSWORD: 'yes'
        
        options: >-
          --health-cmd "mysqladmin ping --silent"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 3306:3306