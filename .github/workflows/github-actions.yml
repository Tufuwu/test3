name: CI
on: [push, pull_request]
jobs:
  build:
    runs-on: ubuntu-22.04
    strategy:
      fail-fast: false
      matrix:
        include:
          - python: 3.9
            env: TOX_ENV=flake8
          - python: 3.9
            env: TOX_ENV=check_rst
          - python: 3.9
            env: TOX_ENV=coverage
          - python: 3.6
            env: TOX_ENV=py36-django111
          - python: 3.6
            env: TOX_ENV=py36-django111
            arch: ppc64le
          - python: 3.6
            env: TOX_ENV=py36-django22
          - python: 3.6
            env: TOX_ENV=py36-django22
            arch: ppc64le
          - python: 3.7
            env: TOX_ENV=py37-django111
          - python: 3.7
            env: TOX_ENV=py37-django111
            arch: ppc64le
          - python: 3.8
            env: TOX_ENV=py38-django22
          - python: 3.8
            env: TOX_ENV=py38-django22
            arch: ppc64le
          - python: 3.9
            env: TOX_ENV=py39-django22
          - python: 3.9
            env: TOX_ENV=py39-django22
            arch: ppc64le
          - python: 3.10
            env: TOX_ENV=py310-django32
          - python: 3.10
            env: TOX_ENV=py310-django32
            arch: ppc64le
          - python: 3.9
            env: TOX_ENV=py39-django32
          - python: 3.10
            env: TOX_ENV=py310-django40
          - python: 3.10
            env: TOX_ENV=py310-django41
    steps:
      - uses: actions/checkout@v3
      - name: Cache pip
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip/http
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: ${{ runner.os }}-pip-
      - name: Cache tox
        uses: actions/cache@v3
        with:
          path: $HOME/build/nitmir/django-cas-server/.tox/$TOX_ENV
          key: ${{ runner.os }}-tox-${{ hashFiles('**/tox.ini') }}
          restore-keys: ${{ runner.os }}-tox-
      - run: |
          travis_retry pip install setuptools --upgrade
          pip install tox $PKGS
          pip freeze
      - run: tox -e $TOX_ENV
      - run: cat tox_log/*.log